{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documentos/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport StreamForm from './StreamForm';\nimport { fetchStream, editStream } from '../../actions';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmi = formValues => {\n      this.props.editStream(this.props.stream.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(StreamForm, {\n      onSubmit: this.onSubmit,\n      initialValues: _.pick(this.props.stream, 'title', 'description'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/hp/Documentos/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","_","StreamForm","fetchStream","editStream","StreamEdit","Component","onSubmi","formValues","props","stream","id","componentDidMount","match","params","render","onSubmit","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;;AAGA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAMrCC,OANqC,GAM1BC,UAAD,IAAgB;AACtB,WAAKC,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWC,MAAX,CAAkBC,EAAxC,EAA4CH,UAA5C;AACH,KARoC;AAAA;;AAErCI,EAAAA,iBAAiB,GAAE;AACf,SAAKH,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBH,EAA/C;AACH;;AAMDI,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKN,KAAL,CAAWC,MAAf,EAAuB;AACnB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACI,MAAA,QAAQ,EAAE,KAAKM,QADnB;AAEI,MAAA,aAAa,EAAEf,CAAC,CAACgB,IAAF,CAAO,KAAKR,KAAL,CAAWC,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AAtBoC;;AAyBzC,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHV,IAAAA,MAAM,EAAES,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBH,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeX,OAAO,CAACkB,eAAD,EAAkB;AAAEf,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAsDC,UAAtD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport StreamForm from './StreamForm';\nimport { fetchStream, editStream } from '../../actions';\n\n\nclass StreamEdit extends React.Component {\n    \n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmi = (formValues) => {\n        this.props.editStream(this.props.stream.id, formValues);\n    }\n \n    render(){\n        if(!this.props.stream) {\n            return <div>Loading...</div>\n        }\n        return (\n            <div>\n                <StreamForm \n                    onSubmit={this.onSubmit} \n                    initialValues={_.pick(this.props.stream, 'title', 'description')}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { \n        stream: state.streams[ownProps.match.params.id]\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}