{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM, FETCH_STREAM, FETCH_STREAMS } from './types';\nimport streams from '../apis/streams';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post('/streams', formValues);\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(\"/streams/\".concat(id), formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(\"/streams/\".concat(id));\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = streams.get(\"/streams/\".concat(id));\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/home/hp/Documentos/streams/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","FETCH_STREAM","FETCH_STREAMS","streams","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","data","editStream","id","put","deleteStream","delete","fetchStreams","get","fetchStream"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,WAA3C,EAAwDC,aAAxD,EAAuEC,YAAvE,EAAqFC,aAArF,QAA0G,SAA1G;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEV,OADH;AAEHW,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAET;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMY,YAAY,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AACzD,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAER,aAAR;AAAuBS,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACF,CAJM;AAMP,OAAO,MAAMC,UAAU,GAAG,CAACC,EAAD,EAAKN,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACc,GAAR,oBAAwBD,EAAxB,GAA8BN,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,WAAR;AAAqBQ,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMI,YAAY,GAAGF,EAAE,IAAI,MAAML,QAAN,IAAkB;AAChD,QAAMR,OAAO,CAACgB,MAAR,oBAA2BH,EAA3B,EAAN;AAEAL,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAES;AAAhC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMI,YAAY,GAAG,MAAM,MAAMT,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACkB,GAAR,CAAY,UAAZ,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMQ,WAAW,GAAIN,EAAD,IAAQ,MAAML,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAGT,OAAO,CAACkB,GAAR,oBAAwBL,EAAxB,EAAjB;AAEAL,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAJM","sourcesContent":["import { SIGN_IN, SIGN_OUT, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM, FETCH_STREAM, FETCH_STREAMS } from './types';\nimport streams from '../apis/streams';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n};\n\nexport const createStream = formValues => async dispatch => {\n   const response = await streams.post('/streams', formValues);\n   \n   dispatch({ type: CREATE_STREAM, payload: response.data });\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n\n    dispatch({ type: EDIT_STREAM, payload: response.data });\n}\n\nexport const deleteStream = id => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch({ type: DELETE_STREAM, payload: id });\n}\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams');\n\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\n}\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = streams.get(`/streams/${id}`);\n    \n    dispatch({ type: FETCH_STREAM, payload: response.data });\n}\n"]},"metadata":{},"sourceType":"module"}