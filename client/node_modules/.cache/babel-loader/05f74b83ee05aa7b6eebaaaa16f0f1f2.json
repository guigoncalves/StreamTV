{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documentos/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (this.props.currentUserId === stream.userId) {\n      return React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.renderAdmin(stream), React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, stream.title, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, stream.description)));\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/new\",\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Create Stream\"));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.renderList()), this.renderCreate());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/hp/Documentos/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","currentUserId","userId","renderList","streams","map","id","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,YAAX;AACH;;AAEDK,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,QAAG,KAAKF,KAAL,CAAWG,aAAX,KAA6BD,MAAM,CAACE,MAAvC,EAA+C;AAC3C,aACA;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADA;AAUH;AACJ;;AAEDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAuBL,MAAM,IAAI;AACpC,aACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,MAAM,CAACM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKP,WAAL,CAAiBC,MAAjB,CADL,EAEI;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,MAAM,CAACO,KADZ,EAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BP,MAAM,CAACQ,WAArC,CAFJ,CAHJ,CADA;AASH,KAVM,CAAP;AAWH;;AAEDC,EAAAA,YAAY,GAAE;AACV,QAAI,KAAKX,KAAL,CAAWY,UAAf,EAA2B;AACvB,aACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ;AAOH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKT,UAAL,EAAjC,CAFJ,EAGK,KAAKM,YAAL,EAHL,CADA;AAOH;;AAtDoC;;AAyDzC,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,OAAO,EAAEW,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACV,OAApB,CADN;AAEHH,IAAAA,aAAa,EAAEa,KAAK,CAACG,IAAN,CAAWf,MAFvB;AAGHQ,IAAAA,UAAU,EAAEI,KAAK,CAACG,IAAN,CAAWP;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAelB,OAAO,CAACqB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchStreams } from '../../actions'; \n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n        if(this.props.currentUserId === stream.userId) {\n            return (\n            <div className=\"right floated content\">\n                <button className=\"ui button primary\">\n                    Edit\n                </button>\n                <button className=\"ui button negative\">\n                    Delete\n                </button>\n            </div>)\n            ;\n        }\n    }\n\n    renderList() {\n        return this.props.streams.map(stream => {\n            return (\n            <div className=\"item\" key={stream.id}>\n                {this.renderAdmin(stream)}\n                <i className=\"large middle aligned icon camera\"/>\n                <div className=\"content\">\n                    {stream.title}\n                    <div className=\"description\">{stream.description}</div>\n                </div>\n            </div>);\n        })\n    }\n\n    renderCreate(){\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{ textAlign: \"right\"}}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\n                        Create Stream\n                    </Link>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n        <div>\n            <h2>Streams</h2>\n            <div className=\"ui celled list\">{this.renderList()}</div>\n            {this.renderCreate()}\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { \n        streams: Object.values(state.streams ),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}