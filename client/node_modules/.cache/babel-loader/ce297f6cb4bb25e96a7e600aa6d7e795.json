{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documentos/clickband/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: \"631217185426-q1ooh5gi6h9t0fotqc7a1t71ehsvvhoo.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === true) {\n      return React.createElement(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignOutClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), \"Logout\");\n    } else {\n      return React.createElement(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignInClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), \"Signin with Google\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/hp/Documentos/clickband/src/components/GoogleAuth.js"],"names":["React","Component","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","props","onSignOutClick","auth","onSignInClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","get","listen","renderAuthButton","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAe/BK,YAf+B,GAefC,UAAD,IAAgB;AAC3B,UAAGA,UAAH,EAAe;AACX,aAAKC,KAAL,CAAWL,MAAX;AACH,OAFD,MAEO;AACH,aAAKK,KAAL,CAAWJ,OAAX;AACH;AACJ,KArB8B;;AAAA,SAuB/BK,cAvB+B,GAuBd,MAAM;AACnB,WAAKC,IAAL,CAAUN,OAAV;AACH,KAzB8B;;AAAA,SA2B/BO,aA3B+B,GA2Bf,MAAM;AAClB,WAAKD,IAAL,CAAUP,MAAV;AACH,KA7B8B;AAAA;;AAE/BS,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKhB,YAAL,CAAkB,KAAKI,IAAL,CAAUH,UAAV,CAAqBgB,GAArB,EAAlB;AACA,aAAKb,IAAL,CAAUH,UAAV,CAAqBiB,MAArB,CAA4B,KAAKlB,YAAjC;AACH,OAPD;AAQH,KATD;AAUH;;AAkBDmB,EAAAA,gBAAgB,GAAG;AACd,QAAI,KAAKjB,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AACjC,aACA;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKE,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,WADA;AAMH,KAPA,MAOM;AACH,aACI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKE,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,uBADJ;AAMH;AACJ;;AAEDe,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACH;;AAnD8B;;AAsDnC,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAErB,IAAAA,UAAU,EAAEqB,KAAK,CAAClB,IAAN,CAAWH;AAAzB,GAAP;AACH,CAFD;;AAIA,eAAeL,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends Component {\n    \n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: \"631217185426-q1ooh5gi6h9t0fotqc7a1t71ehsvvhoo.apps.googleusercontent.com\",\n                scope: \"email\"\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        })\n    }\n\n    onAuthChange = (isSignedIn) => {\n        if(isSignedIn) {\n            this.props.signIn();\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n\n    renderAuthButton() {\n         if (this.props.isSignedIn === true) {\n            return (\n            <button className=\"ui red google button\" onClick={this.onSignOutClick}>\n                <i className=\"google icon\" />\n                Logout\n            </button>\n            )\n        } else {\n            return (\n                <button className=\"ui red google button\" onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    Signin with Google\n                </button>\n                )\n        }\n    }\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn }\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}