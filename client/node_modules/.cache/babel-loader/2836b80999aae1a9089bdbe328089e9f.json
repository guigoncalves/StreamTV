{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documentos/streams/client/src/components/streams/StreamForm.js\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\n\nclass StreamForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (error && touched) {\n      return React.createElement(\"div\", {\n        className: \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, error);\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.props.onSubmit),\n      className: \"ui form error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  let errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a value\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a value\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamForm',\n  validate\n})(StreamForm);","map":{"version":3,"sources":["/home/hp/Documentos/streams/client/src/components/streams/StreamForm.js"],"names":["React","reduxForm","Field","StreamForm","Component","renderInput","input","label","meta","renderError","error","touched","render","props","handleSubmit","onSubmit","validate","formValues","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAYrCC,WAZqC,GAYvB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAD,KAA4B;AACtC,aACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQD,KAAR,CADJ,EAEI,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGK,KAAKG,WAAL,CAAiBD,IAAjB,CAHL,CADA;AAOH,KApBoC;AAAA;;AAErCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAqB;AAC5B,QAAGD,KAAK,IAAIC,OAAZ,EAAqB;AACjB,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KADL,CADJ;AAKH;AACJ;;AAYDE,EAAAA,MAAM,GAAG;AACL,WACA;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,QAAnC,CAAhB;AAA8D,MAAA,SAAS,EAAC,eAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKV,WAApC;AAAiD,MAAA,KAAK,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,MAAA,KAAK,EAAC,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADA;AAOH;;AA9BoC;;AAiCzC,MAAMW,QAAQ,GAAIC,UAAD,IAAgB;AAC7B,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAG,CAACD,UAAU,CAACE,KAAf,EAAsB;AAClBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACH;;AAED,MAAG,CAACF,UAAU,CAACG,WAAf,EAA4B;AACxBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,wBAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAZD;;AAcA,eAAejB,SAAS,CAAC;AACrBoB,EAAAA,IAAI,EAAE,YADe;AAErBL,EAAAA;AAFqB,CAAD,CAAT,CAGZb,UAHY,CAAf","sourcesContent":["import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\n\nclass StreamForm extends React.Component {\n   \n    renderError({ error, touched }) {\n        if(error && touched) {\n            return (\n                <div className=\"ui error message\">\n                    {error}\n                </div>\n            )\n        }\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        return (\n        <div className=\"field\">\n            <label>{label}</label>\n            <input {...input} autoComplete=\"off\" />\n            {this.renderError(meta)}\n        </div>\n        )\n    }\n\n    render() {\n        return (\n        <form onSubmit={this.props.handleSubmit(this.props.onSubmit)} className=\"ui form error\">\n            <Field name=\"title\" component={this.renderInput} label=\"Title\"/>\n            <Field name=\"description\" component={this.renderInput} label=\"Description\"/>\n            <button className=\"ui button primary\">Submit</button>\n        </form>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    let errors = {};\n\n    if(!formValues.title) {\n        errors.title = \"You must enter a value\";\n    }\n    \n    if(!formValues.description) {\n        errors.description = \"You must enter a value\";\n    }\n\n    return errors;\n}\n\nexport default reduxForm({\n    form: 'streamForm',\n    validate\n})(StreamForm);\n"]},"metadata":{},"sourceType":"module"}